[package]
name = "rorm-db"
version = "0.8.1"
edition = "2021"
categories = ["database"]
keywords = ["async", "orm", "database", "orm"]
repository = "https://github.com/rorm-orm/rorm-db"
authors = ["myOmikron <git@omikron.dev>"]
homepage = "https://rorm.rs"
documentation = "https://docs.rorm.rs"
license = "MIT"
description = "The inner database abstraction layer from rorm."

[lib]
name = "rorm_db"

[dependencies]
rorm-sql = { version = "~0.7", path = "../rorm-sql" }
rorm-declaration = { version = "~0.3", path = "../rorm-declaration" }

# Abstractions for asynchronous programming.
futures = { version = "~0.3" }

# Allow wrapping futures and streams
pin-project = { version = "~1" }

# SQL executor. Optional because it requires a runtime and a TLS implementation.
sqlx = { version = "~0.7", optional = true, features = ["time", "chrono", "uuid"] }

# Logging facade
log = { version = "~0.4" }

# Serialization
serde = { version = "~1", features = ["derive"], optional = true }

[build-dependencies]
rustc_version = "0.4.0"

[package.metadata.docs.rs]
features = ["default"]

[features]
default = [
    "all-driver",
    "serde",
]

all-driver = [
    "mysql",
    "postgres",
    "sqlite"
]

serde = [
    "dep:serde",
    "log/serde",
]

# database backends
mysql = [
    "sqlx/mysql",
    "rorm-sql/mysql",
    "rorm-declaration/mysql"
]
postgres = [
    "sqlx/postgres",
    "rorm-sql/postgres",
    "rorm-declaration/postgres"
]
sqlite = [
    "sqlx/sqlite",
    "rorm-sql/sqlite",
    "rorm-declaration/sqlite"
]

# sqlx runtime
async-std = [
    "sqlx/runtime-async-std"
]
tokio = [
    "sqlx/runtime-tokio"
]

# sqlx tls
rustls = [
    "sqlx/tls-rustls"
]
native-tls = [
    "sqlx/tls-native-tls"
]
